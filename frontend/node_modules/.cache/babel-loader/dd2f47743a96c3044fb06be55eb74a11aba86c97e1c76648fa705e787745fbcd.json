{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KHUSHMEET SAINI\\\\Desktop\\\\mern-assignment\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Button, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async () => {\n    console.log(\"Name:\", name, \"Email:\", email, \"Password:\", password); // Log input values\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      console.log(\"Response Status:\", response.status); // Log response status\n\n      if (!response.ok) {\n        const errorText = await response.text(); // Read response as text\n        console.log(\"Error Response:\", errorText); // Log error response\n        throw new Error(errorText); // Throw an error with the text\n      }\n      const data = await response.json();\n      console.log(\"Response Data:\", data); // Log successful response data\n      alert('Registration Successful');\n      navigate('/');\n    } catch (error) {\n      console.error('Registration failed', error);\n      alert('Registration failed: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center vh-100\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '20rem'\n      },\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"text-center\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"w-100\",\n            onClick: handleRegister,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"csJiuSlQmiH49sngUzydjkZ0k9I=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Card","Button","Form","useNavigate","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","navigate","handleRegister","console","log","response","fetch","method","headers","body","JSON","stringify","status","ok","errorText","text","Error","data","json","alert","error","message","className","children","style","width","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KHUSHMEET SAINI/Desktop/mern-assignment/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async () => {\r\n    console.log(\"Name:\", name, \"Email:\", email, \"Password:\", password); // Log input values\r\n    try {\r\n      const response = await fetch('/api/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n  \r\n      console.log(\"Response Status:\", response.status); // Log response status\r\n  \r\n      if (!response.ok) {\r\n        const errorText = await response.text(); // Read response as text\r\n        console.log(\"Error Response:\", errorText); // Log error response\r\n        throw new Error(errorText); // Throw an error with the text\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log(\"Response Data:\", data); // Log successful response data\r\n      alert('Registration Successful');\r\n      navigate('/'); \r\n    } catch (error) {\r\n      console.error('Registration failed', error);\r\n      alert('Registration failed: ' + error.message); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center vh-100\">\r\n      <Card style={{ width: '20rem' }} className=\"p-3\">\r\n        <Card.Body>\r\n          <Card.Title className=\"text-center\">Register</Card.Title>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control \r\n                type=\"text\" \r\n                placeholder=\"Enter name\" \r\n                value={name} \r\n                onChange={(e) => setName(e.target.value)} \r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control \r\n                type=\"email\" \r\n                placeholder=\"Enter email\" \r\n                value={email} \r\n                onChange={(e) => setEmail(e.target.value)} \r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)} \r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" className=\"w-100\" onClick={handleRegister}>\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}